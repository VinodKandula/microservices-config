server.port=${PORT:8000}
message = Test Config Server Message

eureka.client.serviceUrl.defaultZone=${vcap.services.eureka-service.credentials.uri:http://localhost:8761}/eureka/

# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination = reservations

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group = reservations-group

# ensure that the Q is durable
spring.cloud.stream.bindings.input.durableSubscription = true

#Google API
google.units=imperial
google.api.key=AIzaSyDY6IVa8pcYJD4lMDbFaCayQr6327cyqMc
google.maps.api.endpoint=https://maps.googleapis.com/maps

# Google API queries. 
google.directions.api.route.lookup={google.maps.api.endpoint}/api/directions/json?origin={origin}&destination={destination}&key={google.api.key}
google.geocoding.api.address.lookup={google.maps.api.endpoint}/api/geocode/json?latlng={latitude},{longitude}&key={google.api.key}
google.geocoding.api.address.lookup.text={google.maps.api.endpoint}/api/geocode/json?address={address}&key={google.api.key}
google.geocoding.api.address.latlng.lookup={google.maps.api.endpoint}/api/geocode/json?address={address}&key={google.api.key}
google.distancematrix.api.distance.lookup={google.maps.api.endpoint}/api/distancematrix/json?origins={origins}&destinations={destinations}&units={google.units}
